"use strict";(self.webpackChunkcool_hooks_doc=self.webpackChunkcool_hooks_doc||[]).push([[88],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>b});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(n),d=a,b=p["".concat(l,".").concat(d)]||p[d]||m[d]||o;return n?r.createElement(b,s(s({ref:t},c),{},{components:n})):r.createElement(b,s({ref:t},c))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[p]="string"==typeof e?e:a,s[1]=i;for(var u=2;u<o;u++)s[u]=n[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1571:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:4,description:"Use event driven architecture in React"},s="useEventBus",i={unversionedId:"hooks/useEventBus",id:"hooks/useEventBus",title:"useEventBus",description:"Use event driven architecture in React",source:"@site/docs/hooks/useEventBus.mdx",sourceDirName:"hooks",slug:"/hooks/useEventBus",permalink:"/cool-hooks/docs/hooks/useEventBus",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,description:"Use event driven architecture in React"},sidebar:"tutorialSidebar",previous:{title:"useStorageState",permalink:"/cool-hooks/docs/hooks/useStorageState"},next:{title:"HOC",permalink:"/cool-hooks/docs/category/hoc"}},l={},u=[{value:"Usage",id:"usage",level:2},{value:"useEventBus",id:"useeventbus-1",level:3}],c={toc:u},p="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"useeventbus"},"useEventBus"),(0,a.kt)("p",null,"This hooks allow your app to subscribe to an event bus, making it compliant to event driven development."),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"This hook rely on a context so first, you have to wrap your component using the event bus with the context provider"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'import {EventBusProvider} from "./useEventBus";\n\nconst App = () => {\n    return (\n        <EventBusProvider>\n            <ComponentSubscribing />\n            <ComponentEmitting />\n        </EventBusProvider>\n    )\n}\n')),(0,a.kt)("p",null,"Then, you can subscribe / unsubscribe to a channel and emit messages."),(0,a.kt)("admonition",{type:"warning"},(0,a.kt)("p",{parentName:"admonition"},"Always make sure to unsubscribe the channels you subscribed in to avoid memory leaks and error in console saying\nyour trying to update an unmounted component.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'const ComponentSubscribing = () => {\n    const {subscribe, unsubscribe} = useEventBus<string>()\n\n    useEffect(() => {\n        subscribe("channel-1", onMessage)\n\n        return () => unsubscribe("channel-1", onMessage)\n    }, [])\n\n    const onMessage = (message: string) => {\n        console.log(message)\n    }\n\n    return (\n        <>...</>\n    )\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'const ComponentEmitting = () => {\n    const {emit} = useEventBus<string>()\n\n    return (\n        <button onClick={() => emit("channel-1", "Some message")}>\n            Send message\n        </button>\n    )\n}\n')),(0,a.kt)("h3",{id:"useeventbus-1"},"useEventBus"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"type CallbackType = <T>(message: T) => void\n")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Return"),(0,a.kt)("th",{parentName:"tr",align:null},"Signature"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("em",{parentName:"td"},"subscribe")),(0,a.kt)("td",{parentName:"tr",align:null},"(channel: string, callback: CallbackType","<","T>) => void"),(0,a.kt)("td",{parentName:"tr",align:null},"Subscribe to a channel an call the ",(0,a.kt)("em",{parentName:"td"},"callback")," function whenever a message is emitted through it.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("em",{parentName:"td"},"unsubscribe")),(0,a.kt)("td",{parentName:"tr",align:null},"(channel: string, callback: CallbackType","<","T>) => void"),(0,a.kt)("td",{parentName:"tr",align:null},"Unsubscribe to a channel. The ",(0,a.kt)("em",{parentName:"td"},"callback")," function must be the same used for the subscription.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("em",{parentName:"td"},"emit")),(0,a.kt)("td",{parentName:"tr",align:null},"(channel: string, message: T) => void"),(0,a.kt)("td",{parentName:"tr",align:null},"Emit a message on a specific channel")))))}m.isMDXComponent=!0}}]);