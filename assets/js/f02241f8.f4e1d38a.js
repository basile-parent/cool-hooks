"use strict";(self.webpackChunkcool_hooks_doc=self.webpackChunkcool_hooks_doc||[]).push([[793],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=p(n),m=o,h=d["".concat(l,".").concat(m)]||d[m]||c[m]||r;return n?a.createElement(h,s(s({ref:t},u),{},{components:n})):a.createElement(h,s({ref:t},u))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,s=new Array(r);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[d]="string"==typeof e?e:o,s[1]=i;for(var p=2;p<r;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9018:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>p});var a=n(7462),o=(n(7294),n(3905));const r={sidebar_position:3,description:'An alternative "useState" hook storing the data in the browser storage'},s="useStorageState",i={unversionedId:"hooks/useStorageState",id:"hooks/useStorageState",title:"useStorageState",description:'An alternative "useState" hook storing the data in the browser storage',source:"@site/docs/hooks/useStorageState.mdx",sourceDirName:"hooks",slug:"/hooks/useStorageState",permalink:"/cool-hooks/docs/hooks/useStorageState",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,description:'An alternative "useState" hook storing the data in the browser storage'},sidebar:"tutorialSidebar",previous:{title:"useDidUpdateEffect",permalink:"/cool-hooks/docs/hooks/useDidUpdateEffect"},next:{title:"useEventBus",permalink:"/cool-hooks/docs/hooks/useEventBus"}},l={},p=[{value:"Usage",id:"usage",level:2},{value:"Options",id:"options",level:2},{value:"storageMethod",id:"storagemethod",level:3},{value:"synced",id:"synced",level:3}],u={toc:p},d="wrapper";function c(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"usestoragestate"},"useStorageState"),(0,o.kt)("p",null,"This hook is acting just like ",(0,o.kt)("inlineCode",{parentName:"p"},"useState")," except the state is stored in the browser storage,\nallowing your component to persist its state among the refreshes."),(0,o.kt)("p",null,"The initial state provided to the hook will be used only if there is no value already stored in the browser."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},'The state is saved to the browser storage on each "setState" call.\nThe initial state is NOT stored in the storage.')),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'const MyComponent = ({ prop1 }: MyComponentProps) => {\n    \n    const [myState, setMyState] = useStorageState("storage_key", "default_value", { storageMethod: "localStorage", synced: true })\n    \n    return (\n        <>...</>\n    )\n}\n')),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("em",{parentName:"td"},"key")),(0,o.kt)("td",{parentName:"tr",align:null},"The key used for the browser storage.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("em",{parentName:"td"},"initialState")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("em",{parentName:"td"},"(optional)")," The state initial value (only when there is no value in storage for this key).")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("em",{parentName:"td"},"options")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("em",{parentName:"td"},"(optional)")," The hook options (see the ",(0,o.kt)("a",{parentName:"td",href:"#options"},"Options")," section).")))),(0,o.kt)("h2",{id:"options"},"Options"),(0,o.kt)("h3",{id:"storagemethod"},"storageMethod"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Type:")," ",(0,o.kt)("inlineCode",{parentName:"li"},'"localStorage" | "sessionStorage"')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Default:")," ",(0,o.kt)("inlineCode",{parentName:"li"},'"localStorage"'))),(0,o.kt)("p",null,"Choose where you want to store your state:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"localStorage: the state is shared between tabs and persist when tabs are closed.\nThe state could be synchronized between opened tabs with the ",(0,o.kt)("inlineCode",{parentName:"li"},"synced")," option."),(0,o.kt)("li",{parentName:"ul"},"sessionStorage: the state is scoped to the current tab. It will be lost when the tab is closed.\nThe state could not be synchronized.")),(0,o.kt)("h3",{id:"synced"},"synced"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Type:")," ",(0,o.kt)("inlineCode",{parentName:"li"},"boolean")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Default:")," ",(0,o.kt)("inlineCode",{parentName:"li"},"false"))),(0,o.kt)("p",null,"If set to ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," with a ",(0,o.kt)("inlineCode",{parentName:"p"},"localStorage")," storageMethod, the state is synchronized between tabs of a ",(0,o.kt)("strong",{parentName:"p"},"same browser"),".\nThis means that when you change your state on a tab, all tabs implementing the same state (based on the ",(0,o.kt)("inlineCode",{parentName:"p"},"storageKey")," prop) will be updated."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"If set to ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," with a ",(0,o.kt)("inlineCode",{parentName:"p"},"sessionStorage")," storageMethod, you will have a warning on your console.")))}c.isMDXComponent=!0}}]);