"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[282],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),d=c(n),f=o,m=d["".concat(s,".").concat(f)]||d[f]||u[f]||a;return n?r.createElement(m,i(i({ref:t},l),{},{components:n})):r.createElement(m,i({ref:t},l))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=f;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[d]="string"==typeof e?e:o,i[1]=p;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},2892:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>p,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:2,image:"/cool-hooks/img/cool-hooks.png",description:"Hook similar to useDidEffect but only when the component updates"},i="useDidUpdateEffect",p={unversionedId:"hooks/useDidUpdateEffect",id:"hooks/useDidUpdateEffect",title:"useDidUpdateEffect",description:"Hook similar to useDidEffect but only when the component updates",source:"@site/docs/hooks/useDidUpdateEffect.mdx",sourceDirName:"hooks",slug:"/hooks/useDidUpdateEffect",permalink:"/cool-hooks/docs/hooks/useDidUpdateEffect",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,image:"/cool-hooks/img/cool-hooks.png",description:"Hook similar to useDidEffect but only when the component updates"},sidebar:"tutorialSidebar",previous:{title:"useWhyDidYouUpdate",permalink:"/cool-hooks/docs/hooks/useWhyDidYouUpdate"}},s={},c=[{value:"Usage",id:"usage",level:2}],l={toc:c},d="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"usedidupdateeffect"},"useDidUpdateEffect"),(0,o.kt)("p",null,"This hooks act and have the same syntax as the ",(0,o.kt)("inlineCode",{parentName:"p"},"useEffect")," hook. The only difference is the callback does not execute on the first render.\nIt will then be executed each time the dependencies have changed"),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Using a void array as dependency will ends to a pointless hook as it will never be executed"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"useDidUpdateEffect(() => {\n    // Never been called\n}, [])\n"))),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'const MyComponent = ({ prop1 }: MyComponentProps) => {\n    \n    useDidUpdateEffect(() => {\n        console.log("prop1 has changed", prop1)\n    }, [ prop1 ])\n\n    return (\n        <>...</>\n    )\n}\n')),(0,o.kt)("p",null,"This hook is designed to be used just as ",(0,o.kt)("inlineCode",{parentName:"p"},"useEffect"),"."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("em",{parentName:"td"},"callbackFn")),(0,o.kt)("td",{parentName:"tr",align:null},"The callback function, executed when the dependencies ",(0,o.kt)("strong",{parentName:"td"},"updates"),".")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("em",{parentName:"td"},"dependencies")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("em",{parentName:"td"},"(optional)")," The dependencies to listen.")))))}u.isMDXComponent=!0}}]);